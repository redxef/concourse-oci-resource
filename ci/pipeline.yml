---
resource_types:
- name: oci-image
  type: registry-image
  source:
    repository: redxef/concourse-oci-resource
    tag: latest
- name: oci-image-testing
  type: registry-image
  source:
    repository: redxef/concourse-oci-resource
    tag: edge
resources:
- name: source
  type: git
  source:
    uri: https://gitea.redxef.at/redxef/concourse-oci-resource
    branch: master
    fetch_tags: true
- name: upstream-image
  type: registry-image
  source:
    repository: alpine
- name: concourse-oci-resource
  type: oci-image
  source:
    repository: redxef/concourse-oci-resource
    tag: edge
    username: ((docker.username))
    password: ((docker.password))
- name: concourse-oci-resource-testing
  type: oci-image-testing
  source:
    repository: redxef/concourse-oci-resource
    tag: edge
    username: ((docker.username))
    password: ((docker.password))

jobs:
- name: build-push-edge
  plan:
  - get: source
    trigger: true
  - get: upstream-image
    trigger: true
  - task: compute-docker-tags
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine/git
      inputs:
      - name: source
        path: .
      outputs:
      - name: docker-tags
      run:
        path: sh
        args:
        - -c
        - |
          #!/usr/bin/env sh
          git rev-parse --short HEAD > docker-tags/tags.txt
          git show-ref --tags | \
              sed -n "/$(git rev-parse HEAD)/ s|$(git rev-parse HEAD).refs/tags/||gp" \
              >> docker-tags/tags.txt
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: redxef/concourse-buildkit
      inputs:
      - name: source
        path: .
      outputs:
      - name: build-output
      params:
        dest: build-output/image.tar
        platform: aarch64,arm,ppc64le,s390x,x86_64
        context: .
      run:
        path: build
  - put: concourse-oci-resource
    inputs:
    - build-output
    - docker-tags
    params:
      image: build-output/image.tar
      additional_tags: docker-tags/tags.txt
- name: test-and-tag
  plan:
  - get: concourse-oci-resource
    passed:
    - build-push-edge
    trigger: true
  - get: concourse-oci-resource-testing
    # TODO: verify artifacts
  - put: concourse-oci-resource-testing
    inputs:
    - concourse-oci-resource-testing
    params:
      image: concourse-oci-resource-testing/image.tar
  - task: create-latest-tag-file
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: alpine/git
      outputs:
      - name: latest-tag
      run:
        path: sh
        args:
        - -c
        - |
          #!/usr/bin/env sh
          echo latest > latest-tag/tags.txt
  - put: concourse-oci-resource
    inputs:
    - concourse-oci-resource
    - latest-tag
    params:
      image: concourse-oci-resource/image.tar
      additional_tags: latest-tag/tags.txt

